Ternary Operators
- a b c mdx
-- Returns (<a>^<b>) mod <c>.



Binary Operators
- a b add
-- Returns <a>+<b>

- a b sub
-- Returns <a>-<b>

- a b mul
-- Returns <a>*<b>

- a b div
-- Returns <a>/<b>, unless <b> is 0. If <b> is 0, 0 is returned instead.

- a b fdiv
-- Returns <a> rounded-down answer for <a>/<b>, unless <b> is 0. If <b> is 0, 0 is returned instead.

- a b mod
-- Returns the remainder of the division <a>/<b>, unless <b> is 0. If <b> is 0, 0 is returned instead.

- a b gt
-- Returns 1 if <a> > <b>, returns 0 if <a> !> <b>.

- a b gte
-- Returns 1 if <a> > <b> or <a> == <b>, returns 0 if <a> !> <b> and <a> != 0.

- a b lt
-- Returns 1 if <a> < <b>, returns 0 if <a> !< <b>.

- a b lte
-- Returns 1 if <a> < <b> or <a> == <b>, returns 0 if <a> !< <b> and <a> != 0.

- a b eq
-- Returns 1 if <a> == <b>, returns 0 if <a> != <b>.

- a b neq
-- Returns 1 if <a> != <b>, returns 0 if <a> == <b>.

- a b pow
-- Returns <a> ^ <b>.

- a b nrt
-- Returns the <b>-th root of <a> (<a> ^ (1/<b>)).

- a b log
-- Returns the exponent given the base and the result

- a b gpw
-- Returns the exponent given the base and the result [Note - deprecated opcode].

- a b max
-- Returns the largest of <a> and <b>.

- a b min
-- Returns the smallest of <a> and <b>.

- a b gin
-- Returns the <b>-th value of <a>.



Unary Operators:
- a sin
-- Returns the sine of <a> degrees

- a cos
-- Returns the cosine of <a> degrees

- a tan
-- Returns the tangent of <a> degrees if <a> is not 90, otherwise return 0.

- a asn
-- Returns the arc-sine of <a> if <a> is between -1 and 1, otherwise return 0.

- a acs
-- Returns the arc-cosine of <a> if <a> is between -1 and 1, otherwise return 0.

- a rup
-- Rounds <a> up to the next integer value.

- a rdw
-- Rounds <a> down to the previous integer value.

- a inc
-- Increments <a>.

- a dec
-- Decrements <a>.

- a neg
-- Negates the sign of <a>.

- a abs
-- Returns the absolute value of <a>

- a eq0
-- Returns 1 if <a> equals 0 otherwise return 0.

- a neq0
-- Returns 1 if <a> does not equal 0 otherwise return 0.

- a rec
-- Returns the reciprocal of <a>.

- a sqrt
-- Returns the square root of <a>.

- a cbrt
-- Returns the cube root of <a>.

- a adx
-- Adds <a> to the [x] register.

- a ady
-- Adds <a> to the [y] register.

- a dcd
-- Returns a random "character" from <a>.

- a src
-- Returns a random number from 0 to <a>.

- a nsrc
-- Returns a random number from -<a> to 0.

- a msrc
-- Returns a random number from -<a> to a.

- a fct
-- Returns the factorial of <a>.



Other Operators:
- eu
-- Returns Euler's number.

- pi
-- Returns pi.

- !inp
-- Gets an input.

- dup
-- Duplicates the current value on the stack.

- self
-- Duplicated the current value on the stack. [Note - Deprecated opcode]

- !out
-- Outputs the most recent/current value on the stack. Note that the interpreter by default will return a value.
-- Use !out for when there is no output normally, or for better readability.

- dsr
-- Define a string; stored in a file.

- fmc
-- Define a function, stored in a file.

- flt
-- Load a string, from a file.

- flc
-- Load code from a function, from a file.

- a b cbs
-- If <a> is equal to 1, trigger function <b>.

- a b c cbs
-- If <a> is equal to 1, trigger function <b>. If a is equal to 0, trigger function <c>.

- a jsr
-- Trigger function <a>.

- a b pts
-- If <a> is equal to 1, output the contents of the code in function <b>.

- a b c pt2
-- If <a> is equal to 1, output the contents of the code in function <b>. If a is equal to 0, output the contents of the code in function <c>.

- nop
-- Does "nothing". This takes a value from the stack if possible, and immediately returns it.

- brk
-- Returns back to the interpreter. Does nothing, unless instructions succeed the brk instruction. In that scenario, all of the rest are ignored.

- irp
-- Ignores the next instruction by removing it.

- swp
-- Swaps the top 2 values on the stack from (<a>,<b>) to (<b>,<a>).

- a b ncr
-- Returns (<a>)C(<b>).

- a b npr
-- Returns (<a>)P(<b>).

- a !trace
-- Returns basic properties of <a>.



Register-related Opcodes:
- inx
-- Increment the [x] register.

- dex
-- Decrement the [x] register.

- a stx
-- Sets the [x] register as <a>.

- phx
-- Pushes the value of the [x] register on to the stack.

- otx
-- Outputs the value of the [x] register to stdout. Use this mainly for debugging.


- iny
-- Increment the [y] register.

- dey
-- Decrement the [y] register.

- a sty
-- Sets the [y] register as <a>.

- phy
-- Pushes the value of the [y] register on to the stack.

- oty
-- Outputs the value of the [y] register to stdout. Use this mainly for debugging.

- sxy
-- Swaps the values of the [x] register and the [y] register.



Flag-related Opcodes:
- mff
-- Create a file which stores a single character.

- gff
-- Adds a single character to a global flag variable.

- outf
-- Outputs the current flag.



Position-related Opcodes:
- a b adp
-- Appends <a> to the list of x positions and appends <b> to the list of y positions.

- a vwp
-- Outputs the x,y positions of the <a>-th set of positions.

- a gtp
-- Appends the x and y positions of the <a>-th set of positions to the stack. Note that the x position is pushed before the y position.
-- This means that the y position will be called first if the stack values are requested.
-- Negate this effect using swp.

- a b arp
-- Takes the x,y positions of the <a>-th set and the <b>-th sets of positions, adds the two x positions together in to one, adds the two y positions together in to one, and returns the new x position and the new y position (in that order).
-- Negate this effect using swp. 
