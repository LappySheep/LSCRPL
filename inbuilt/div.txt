Function = div

Format:

a b div

Purpose:

(Little Endian) a/b
(Big Endian) b/a

Pops result on to the stack

Examples:
(Little Endian)

512 4 div 4 4 div div
128 4 4 div div
32 4 div
>> 8

(Big Endian)

512 4 div 4 4 div div
128 4 4 div div
128 1 div
>> 128

If the mul function is used with arrays...

1 2 3 4 5 6 7 8 8 arr{a}

If the array is multiplied by an integer such as:

#little endian
arr{a} 4 mul 1 arr{a}
#then the array itself becomes 4 times smaller, and so does the size.
arr{a} !out
>> 1 2

If the array is multiplied by a float, then the array itself becomes x times smaller, and then the decimal point value is converted
to a percentage that is rounded down to an appropriate fraction before subtracting itself as a multiple of the original array to its new
state:

arr{a} 3.1111111 mul 1 arr{a} #2.5...
arr{a} !out
>> 1 2 3

If a number is multiplied by an array, the number is multiplied by the first value of the array and popped to the stack.

2 4 6 8 10 5 arr{a}
10 arr{a} div
#outputs 0.2

If a float is multiplied by an array, the float is multiplied by the first value of the array and popped to the stack.

21 4 6 8 10 5 arr{a}
10.5 arr{a} div
#outputs 2

If an array is multiplied by an array, the first value of both arrays are multiplied and popped to the stack.

9 3 4 5 6 5 arr{a}
2 4 6 8 10 5 arr{b}
arr{a} arr{b} div !out
>> 4.5
